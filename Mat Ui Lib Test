local Library = {}

function Library:Window(title)
		local UiLib = Instance.new("ScreenGui")
		local Top = Instance.new("Frame")
		local Main = Instance.new("Frame")
		local TabHolder = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")
		local UIPadding = Instance.new("UIPadding")
		local Title = Instance.new("TextLabel")
		local Mini = Instance.new("TextButton")
		local UICorner_9 = Instance.new("UICorner")

		UiLib.Parent = game.CoreGui
		UiLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

		Top.Name = "Top"
		Top.Parent = UiLib
		Top.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		Top.BorderSizePixel = 0
		Top.Position = UDim2.new(0.335356593, 0, 0.409090906, 0)
		Top.Size = UDim2.new(0, 389, 0, 29)
		Top.Active = true

		Main.Name = "Main"
		Main.Parent = Top
		Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		Main.BorderSizePixel = 0
		Main.Position = UDim2.new(0, 0, 1, 0)
		Main.Size = UDim2.new(0, 389, 0, 234)

		TabHolder.Name = "TabHolder"
		TabHolder.Parent = Main
		TabHolder.Active = true
		TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabHolder.BackgroundTransparency = 1.000
		TabHolder.Size = UDim2.new(0, 112, 0, 203)
		TabHolder.ScrollBarThickness = 0

		UIListLayout.Parent = TabHolder
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 3)

		UIPadding.Parent = TabHolder
		UIPadding.PaddingTop = UDim.new(0, 6)

		Title.Name = "Title"
		Title.Parent = Top
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0.0161290318, 0, 0.103448279, 0)
		Title.Size = UDim2.new(0, 162, 0, 23)
		Title.Font = Enum.Font.GothamSemibold
		Title.Text = title
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		Title.TextXAlignment = Enum.TextXAlignment.Left

		Mini.Name = "Mini"
		Mini.Parent = Top
		Mini.BackgroundColor3 = Color3.fromRGB(0, 255, 128)
		Mini.ClipsDescendants = true
		Mini.Position = UDim2.new(0.933179677, 0, 0.137931034, 0)
		Mini.Size = UDim2.new(0, 21, 0, 19)
		Mini.ZIndex = 2
		Mini.Font = Enum.Font.SourceSans
		Mini.Text = ""
		Mini.TextColor3 = Color3.fromRGB(0, 0, 0)
		Mini.TextSize = 14.000

		UICorner_9.CornerRadius = UDim.new(0, 2)
		UICorner_9.Parent = Mini

		local function TSYJGC_fake_script() -- Mini.Script 
			local script = Instance.new('Script', Mini)

			script.Parent.MouseButton1Click:Connect(function()
				if script.Parent.BackgroundColor3 == Color3.fromRGB(0, 255, 128) then
					script.Parent.BackgroundColor3 = Color3.fromRGB(255, 0, 102)
					script.Parent.Parent.Main.ClipsDescendants = true
					script.Parent.Parent.Main:TweenSize(UDim2.new(0, 389,0, 0), "Out", "Quad", 0.4, true)
				else
					script.Parent.BackgroundColor3 = Color3.fromRGB(0, 255, 128)
					script.Parent.Parent.Main:TweenSize(UDim2.new(0, 389,0, 234), "Out", "Quad", 0.4, true)
					wait(0.3)
					script.Parent.Parent.Main.ClipsDescendants = false
				end
			end)
		end
	coroutine.wrap(TSYJGC_fake_script)()
	
	function dragify(Frame)
		dragToggle = nil
		dragSpeed = .25 
		dragInput = nil
		dragStart = nil
		dragPos = nil
		
		function updateInput(input)
			Delta = input.Position - dragStart
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
		end
		
		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if (input.UserInputState == Enum.UserInputState.End) then
						dragToggle = false
					end
				end)
			end
		end)
		
		Frame.InputChanged:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				dragInput = input
			end
		end)
		
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if (input == dragInput and dragToggle) then
				updateInput(input)
			end
		end)
	end
	
	dragify(Top)
	
	Mini.MouseButton1Down:Connect(function()
		local c = Instance.new("ImageLabel", Mini)
		local Mouse = game.Players.LocalPlayer:GetMouse()
		c.BackgroundTransparency = 1
		c.Image = "rbxassetid://3570695787"
		c.ImageTransparency = 0.6
		c.Position = UDim2.new(0, (Mouse.X - c.AbsolutePosition.X), 0, (Mouse.Y - c.AbsolutePosition.Y))
		c.ScaleType = "Slice"
		c.SliceCenter = Rect.new(100, 100, 100, 100)
		c.SliceScale = 1
		local Size = 0
		if Mini.AbsoluteSize.X > Mini.AbsoluteSize.Y then
			Size = Mini.AbsoluteSize.X*1.5
		elseif Mini.AbsoluteSize.X < Mini.AbsoluteSize.Y then
			Size = Mini.AbsoluteSize.Y*1.5
		elseif Mini.AbsoluteSize.X == Mini.AbsoluteSize.Y then
			Size = Mini.AbsoluteSize.X*1.5
		end
		c:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(.5, -Size/2, .5, -Size/2), "Out", "Linear", .5)
		Mini.MouseButton1Up:Connect(function()
			while c.ImageTransparency ~= 1 do
				wait()
				c.ImageTransparency = c.ImageTransparency + 0.02
				if c.ImageTransparency == 1 then c:Destroy() end
			end
		end)
	end)
	
	local Lib = {}
	
	function Lib:Tab(name)
		local TabButton = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TabName = Instance.new("TextLabel")
		local Tab = Instance.new("Frame")
		local Container = Instance.new("ScrollingFrame")
		local UIListLayout_2 = Instance.new("UIListLayout")
		local UIPadding_2 = Instance.new("UIPadding")
		
		Tab.Name = "Tab"
		Tab.Parent = Main
		Tab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		Tab.BorderSizePixel = 0
		Tab.Position = UDim2.new(0.31195429, 0, 0.024630541, 0)
		Tab.Size = UDim2.new(0, 267, 0, 227)
		
		Container.Name = "Container"
		Container.Parent = Tab
		Container.Active = true
		Container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Container.BackgroundTransparency = 1.000
		Container.Size = UDim2.new(0, 267, 0, 227)
		Container.CanvasSize = UDim2.new(0, 0, 6, 0)
		Container.ScrollBarThickness = 0
		
		UIListLayout_2.Parent = Container
		UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_2.Padding = UDim.new(0, 5)
		
		UIPadding_2.Parent = Container
		UIPadding_2.PaddingTop = UDim.new(0, 5)
		
		TabButton.Name = "TabButton"
		TabButton.Parent = TabHolder
		TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		TabButton.BorderSizePixel = 0
		TabButton.ClipsDescendants = true
		TabButton.Position = UDim2.new(0.0357142873, 0, 0.024630541, 0)
		TabButton.Size = UDim2.new(0, 104, 0, 28)
		TabButton.AutoButtonColor = false
		TabButton.Font = Enum.Font.SourceSans
		TabButton.Text = ""
		TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabButton.TextSize = 14.000
		TabButton.MouseButton1Click:Connect(function()
			for i,v in pairs(Tab:GetChildren()) do
				if v.Name == "Container" then
					v.Visible = false
				end
			end
			Container.Visible = true
		end)
		
		UICorner.CornerRadius = UDim.new(0, 1)
		UICorner.Parent = TabButton
		
		TabName.Name = "TabName"
		TabName.Parent = TabButton
		TabName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabName.BackgroundTransparency = 1.000
		TabName.Position = UDim2.new(0.0865384638, 0, 0.189560443, 0)
		TabName.Size = UDim2.new(0, 71, 0, 18)
		TabName.Font = Enum.Font.Gotham
		TabName.Text = name
		TabName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabName.TextScaled = true
		TabName.TextSize = 14.000
		TabName.TextWrapped = true
		TabName.TextXAlignment = Enum.TextXAlignment.Left
		
		local function XGTZ_fake_script() -- TabButton.Script 
			local script = Instance.new('Script', TabButton)
			
			script.Parent.MouseButton1Down:Connect(function()
				for i,v in pairs(script.Parent.Parent.Parent.TabHolder:GetChildren()) do
					if v.Name == "TabButton" then
						v.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					end
				end
				script.Parent.BackgroundColor3 = Color3.fromRGB(1, 255, 120)
			end)
		end
		coroutine.wrap(XGTZ_fake_script)()
		
		local Liby = {}
		
		function Liby:Button(name, callback)
			local Button = Instance.new("TextButton")
			local UICorner_2 = Instance.new("UICorner")
			local ButtonName = Instance.new("TextLabel")
			
			Button.Name = "Button"
			Button.Parent = Container
			Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			Button.BorderSizePixel = 0
			Button.ClipsDescendants = true
			Button.Position = UDim2.new(0.0355805233, 0, 0.0252525248, 0)
			Button.Size = UDim2.new(0, 248, 0, 28)
			Button.Font = Enum.Font.SourceSans
			Button.Text = ""
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 14.000
			Button.MouseButton1Click:Connect(function()
				callback()
			end)
			
			UICorner_2.CornerRadius = UDim.new(0, 3)
			UICorner_2.Parent = Button
			
			ButtonName.Name = "ButtonName"
			ButtonName.Parent = Button
			ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ButtonName.BackgroundTransparency = 1.000
			ButtonName.Position = UDim2.new(0.254032254, 0, 0.142857149, 0)
			ButtonName.Size = UDim2.new(0, 122, 0, 19)
			ButtonName.Font = Enum.Font.Gotham
			ButtonName.Text = name
			ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonName.TextScaled = true
			ButtonName.TextSize = 14.000
			ButtonName.TextWrapped = true
			
			Button.MouseButton1Down:Connect(function()
				local c = Instance.new("ImageLabel", Button)
				local Mouse = game.Players.LocalPlayer:GetMouse()
				c.BackgroundTransparency = 1
				c.Image = "rbxassetid://3570695787"
				c.ImageTransparency = 0.6
				c.Position = UDim2.new(0, (Mouse.X - c.AbsolutePosition.X), 0, (Mouse.Y - c.AbsolutePosition.Y))
				c.ScaleType = "Slice"
				c.SliceCenter = Rect.new(100, 100, 100, 100)
				c.SliceScale = 1
				local Size = 0
				if Button.AbsoluteSize.X > Button.AbsoluteSize.Y then
					Size = Button.AbsoluteSize.X*1.5
				elseif Button.AbsoluteSize.X < Button.AbsoluteSize.Y then
					Size = Button.AbsoluteSize.Y*1.5
				elseif Button.AbsoluteSize.X == Button.AbsoluteSize.Y then
					Size = Button.AbsoluteSize.X*1.5
				end
				c:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(.5, -Size/2, .5, -Size/2), "Out", "Linear", .5)
				Button.MouseButton1Up:Connect(function()
					while c.ImageTransparency ~= 1 do
						wait()
						c.ImageTransparency = c.ImageTransparency + 0.02
						if c.ImageTransparency == 1 then c:Destroy() end
					end
				end)
			end)
		end
		
		function Liby:Toggle(name, callback)
			local ToggleBack = Instance.new("Frame")
			local UICorner_3 = Instance.new("UICorner")
			local Toggle = Instance.new("TextButton")
			local ToggleLogo = Instance.new("Frame")
			local UICorner_4 = Instance.new("UICorner")
			local ToggleName = Instance.new("TextLabel")
			
			ToggleBack.Name = "ToggleBack"
			ToggleBack.Parent = Container
			ToggleBack.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			ToggleBack.Position = UDim2.new(-0.228464425, 0, 0.017676767, 0)
			ToggleBack.Size = UDim2.new(0, 248, 0, 28)
			
			UICorner_3.CornerRadius = UDim.new(0, 3)
			UICorner_3.Parent = ToggleBack
			
			Toggle.Name = "Toggle"
			Toggle.Parent = ToggleBack
			Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Toggle.BackgroundTransparency = 1.000
			Toggle.Size = UDim2.new(0, 248, 0, 28)
			Toggle.ZIndex = 2
			Toggle.Font = Enum.Font.SourceSans
			Toggle.Text = ""
			Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			Toggle.TextSize = 14.000
			
			ToggleLogo.Name = "ToggleLogo"
			ToggleLogo.Parent = ToggleBack
			ToggleLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleLogo.Position = UDim2.new(0.0282258056, 0, 0.178571433, 0)
			ToggleLogo.Size = UDim2.new(0, 19, 0, 17)
			
			UICorner_4.CornerRadius = UDim.new(0, 3)
			UICorner_4.Parent = ToggleLogo
			
			ToggleName.Name = "ToggleName"
			ToggleName.Parent = ToggleBack
			ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleName.BackgroundTransparency = 1.000
			ToggleName.Position = UDim2.new(0.149193555, 0, 0.142857149, 0)
			ToggleName.Size = UDim2.new(0, 122, 0, 19)
			ToggleName.Font = Enum.Font.Gotham
			ToggleName.Text = "Toggle"
			ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
			ToggleName.TextScaled = true
			ToggleName.TextSize = 14.000
			ToggleName.TextWrapped = true
			ToggleName.TextXAlignment = Enum.TextXAlignment.Left
			
			local function VLNPS_fake_script() -- Toggle.Script 
				local script = Instance.new('Script', Toggle)
				
				script.Parent.MouseButton1Click:Connect(function()
					if script.Parent.Parent.ToggleLogo.BackgroundColor3 == Color3.fromRGB(255, 255, 255) then
						script.Parent.Parent.ToggleLogo.BackgroundColor3 = Color3.fromRGB(1, 255, 120)
					else
						script.Parent.Parent.ToggleLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					end
				end)
			end
			coroutine.wrap(VLNPS_fake_script)()
			
			Toggle.MouseButton1Down:Connect(function()
				local c = Instance.new("ImageLabel", Toggle)
				local Mouse = game.Players.LocalPlayer:GetMouse()
				c.BackgroundTransparency = 1
				c.Image = "rbxassetid://3570695787"
				c.ImageTransparency = 0.6
				c.Position = UDim2.new(0, (Mouse.X - c.AbsolutePosition.X), 0, (Mouse.Y - c.AbsolutePosition.Y))
				c.ScaleType = "Slice"
				c.SliceCenter = Rect.new(100, 100, 100, 100)
				c.SliceScale = 1
				local Size = 0
				if Toggle.AbsoluteSize.X > Toggle.AbsoluteSize.Y then
					Size = Toggle.AbsoluteSize.X*1.5
				elseif Toggle.AbsoluteSize.X < Toggle.AbsoluteSize.Y then
					Size = Toggle.AbsoluteSize.Y*1.5
				elseif Toggle.AbsoluteSize.X == Toggle.AbsoluteSize.Y then
					Size = Toggle.AbsoluteSize.X*1.5
				end
				c:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(.5, -Size/2, .5, -Size/2), "Out", "Linear", .5)
				Toggle.MouseButton1Up:Connect(function()
					while c.ImageTransparency ~= 1 do
						wait()
						c.ImageTransparency = c.ImageTransparency + 0.02
						if c.ImageTransparency == 1 then c:Destroy() end
					end
				end)
			end)
		end
		
		function Liby:Slider(name, min, max, start, callback)
			local SliderBack = Instance.new("Frame")
			local UICorner_5 = Instance.new("UICorner")
			local SliderName = Instance.new("TextLabel")
			local Slider = Instance.new("Frame")
			local UICorner_6 = Instance.new("UICorner")
			local SliderValue = Instance.new("TextLabel")
			
			SliderBack.Name = "SliderBack"
			SliderBack.Parent = Container
			SliderBack.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			SliderBack.Position = UDim2.new(-0.228464425, 0, 0.017676767, 0)
			SliderBack.Size = UDim2.new(0, 248, 0, 28)
			
			UICorner_5.CornerRadius = UDim.new(0, 3)
			UICorner_5.Parent = SliderBack
			
			SliderName.Name = "SliderName"
			SliderName.Parent = SliderBack
			SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderName.BackgroundTransparency = 1.000
			SliderName.Position = UDim2.new(0.0282258056, 0, 0.178571433, 0)
			SliderName.Size = UDim2.new(0, 56, 0, 19)
			SliderName.ZIndex = 2
			SliderName.Font = Enum.Font.Gotham
			SliderName.Text = name
			SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderName.TextScaled = true
			SliderName.TextSize = 14.000
			SliderName.TextWrapped = true
			SliderName.TextXAlignment = Enum.TextXAlignment.Left
			
			Slider.Name = "Slider"
			Slider.Parent = SliderBack
			Slider.BackgroundColor3 = Color3.fromRGB(1, 255, 120)
			Slider.Size = UDim2.new(0, 0, 0, 28)
			
			UICorner_6.CornerRadius = UDim.new(0, 3)
			UICorner_6.Parent = Slider
			
			SliderValue.Name = "SliderValue"
			SliderValue.Parent = SliderBack
			SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.BackgroundTransparency = 1.000
			SliderValue.Position = UDim2.new(0.802419364, 0, 0.178571433, 0)
			SliderValue.Size = UDim2.new(0, 49, 0, 19)
			SliderValue.Font = Enum.Font.Gotham
			SliderValue.Text = "0/100"
			SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.TextScaled = true
			SliderValue.TextSize = 14.000
			SliderValue.TextWrapped = true
		end
		
		function Liby:Box(name, boxstring, callback)
			local BoxBack = Instance.new("Frame")
			local Box = Instance.new("TextBox")
			local UICorner_7 = Instance.new("UICorner")
			local UICorner_8 = Instance.new("UICorner")
			local BoxName = Instance.new("TextLabel")
			
			BoxBack.Name = "BoxBack"
			BoxBack.Parent = Container
			BoxBack.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			BoxBack.Size = UDim2.new(0, 248, 0, 28)
			
			Box.Name = "Box"
			Box.Parent = BoxBack
			Box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			Box.ClipsDescendants = true
			Box.Position = UDim2.new(0.725806475, 0, 0, 0)
			Box.Size = UDim2.new(0, 68, 0, 28)
			Box.Font = Enum.Font.Gotham
			Box.Text = boxstring
			Box.TextColor3 = Color3.fromRGB(255, 255, 255)
			Box.TextSize = 16.000
			
			UICorner_7.CornerRadius = UDim.new(0, 3)
			UICorner_7.Parent = Box
			
			UICorner_8.CornerRadius = UDim.new(0, 3)
			UICorner_8.Parent = BoxBack
			
			BoxName.Name = "BoxName"
			BoxName.Parent = BoxBack
			BoxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BoxName.BackgroundTransparency = 1.000
			BoxName.Position = UDim2.new(0.0282258056, 0, 0.142857149, 0)
			BoxName.Size = UDim2.new(0, 56, 0, 19)
			BoxName.Font = Enum.Font.Gotham
			BoxName.Text = name
			BoxName.TextColor3 = Color3.fromRGB(255, 255, 255)
			BoxName.TextScaled = true
			BoxName.TextSize = 14.000
			BoxName.TextWrapped = true
			BoxName.TextXAlignment = Enum.TextXAlignment.Left
		end
			
		return Liby;
		
	end
	
	return Lib;
	
end

return Library;
