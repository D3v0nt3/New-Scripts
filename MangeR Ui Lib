print("Devonte was here :)")
for _, v in pairs(game.CoreGui:GetChildren()) do
	if v.Name == "UILib" then
		v:Destroy()
	end
end

local UILib = Instance.new("ScreenGui")
UILib.Name = "UILib"
UILib.Parent = game.CoreGui
UILib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local function getNextWindowPos()
	local biggest = 0;
	local ok = nil;
	for i, v in pairs(UILib:GetChildren()) do
		if v.Position.X.Offset > biggest then
			biggest = v.Position.X.Offset
			ok = v;
		end
	end
	if biggest == 0 then
		biggest = biggest + 5;
	else
		biggest = biggest + ok.Size.X.Offset + 0.5;
	end
	
	return biggest;
end

local Library = {}

	function Library:Window(title)
		local Top = Instance.new("Frame")
		local UICorner = Instance.new("UICorner")
		local Title = Instance.new("TextLabel")
		local Minimize = Instance.new("TextButton")
		local MiniLogo = Instance.new("ImageButton")
		local Container = Instance.new("Frame")
		local UIListLayout = Instance.new("UIListLayout")
		
		Top.Name = "Top"
		Top.Parent = UILib
		Top.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		Top.Position = UDim2.new(0, getNextWindowPos() + 10, 0, 10)
		Top.Size = UDim2.new(0, 157, 0, 33)
		Top.Active = true
		Top.Draggable = true
		
		UICorner.CornerRadius = UDim.new(0, 3)
		UICorner.Parent = Top
		
		Title.Name = "Title"
		Title.Parent = Top
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0.101, 0,-0.012, 0)
		Title.Size = UDim2.new(0, 111, 0, 31)
		Title.Font = Enum.Font.SourceSans
		Title.Text = title
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		Title.TextXAlignment = Enum.TextXAlignment.Left
		
		Minimize.Name = "Minimize"
		Minimize.Parent = Top
		Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Minimize.BackgroundTransparency = 1.000
		Minimize.Position = UDim2.new(0.802999973, 0, 0.151999995, 0)
		Minimize.Size = UDim2.new(0, 30, 0, 30)
		Minimize.ZIndex = 2
		Minimize.Font = Enum.Font.SourceSans
		Minimize.Text = ""
		Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
		Minimize.TextSize = 14.000
		
		MiniLogo.Name = "MiniLogo"
		MiniLogo.Parent = Top
		MiniLogo.BackgroundTransparency = 1.000
		MiniLogo.Position = UDim2.new(0.803370774, 0, 0.151515156, 0)
		MiniLogo.Size = UDim2.new(0, 25, 0, 25)
		MiniLogo.Image = "rbxassetid://3926305904"
		MiniLogo.ImageRectOffset = Vector2.new(724, 484)
		MiniLogo.ImageRectSize = Vector2.new(36, 36)
		
		Container.Name = "Container"
		Container.Parent = Top
		Container.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		Container.BackgroundTransparency = 1.000
		Container.Position = UDim2.new(0, 0, 0.969696999, 0)
		Container.Size = UDim2.new(0, 157, 0, 0)
		
		UIListLayout.Parent = Container
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		
		local function LPCDXSE_fake_script() -- Minimize.Minmize Script 
			local script = Instance.new('Script', Minimize)
		
			Toggle = false
			script.Parent.MouseButton1Click:Connect(function()
				if Toggle == false then
					game:GetService("TweenService"):Create(script.Parent.Parent.MiniLogo, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 90}):Play();
					script.Parent.Parent.Container.Visible = false
					Toggle = true
				else
					game:GetService("TweenService"):Create(script.Parent.Parent.MiniLogo, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play();
					script.Parent.Parent.Container.Visible = true
					Toggle = false
				end
			end)
		end
		coroutine.wrap(LPCDXSE_fake_script)()
	
	local Lib = {}
	
	function Lib:Button(name, callback)
		local ButtonContainer = Instance.new("Frame")
		local Button = Instance.new("TextButton")
		local UICorner_2 = Instance.new("UICorner")
		local ButtonName = Instance.new("TextLabel")
		local callback = callback or function() end
		
		ButtonContainer.Name = "ButtonContainer"
		ButtonContainer.Parent = Container
		ButtonContainer.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
		ButtonContainer.BorderSizePixel = 0
		ButtonContainer.Position = UDim2.new(0, 0, NAN, 0)
		ButtonContainer.Size = UDim2.new(0, 157, 0, 40)
		
		Button.Name = "Button"
		Button.Parent = ButtonContainer
		Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		Button.Position = UDim2.new(0.021004796, 0, 0.0398331098, 0)
		Button.Size = UDim2.new(0, 150, 0, 35)
		Button.Font = Enum.Font.SourceSans
		Button.Text = ""
		Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button.TextSize = 14.000
		Button.MouseButton1Click:Connect(function()
			pcall(callback)
		end)
		
		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Button
		
		ButtonName.Name = "ButtonName"
		ButtonName.Parent = Button
		ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ButtonName.BackgroundTransparency = 1.000
		ButtonName.Position = UDim2.new(0.140000001, 0, 0.0857142881, 0)
		ButtonName.Size = UDim2.new(0, 108, 0, 29)
		ButtonName.Font = Enum.Font.SourceSans
		ButtonName.Text = name
		ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
		ButtonName.TextScaled = true
		ButtonName.TextSize = 14.000
		ButtonName.TextWrapped = true
	end
	
	function Lib:Toggle(name, callback)
		local ToggleContainer = Instance.new("Frame")
		local Toggle = Instance.new("TextButton")
		local ToggleName = Instance.new("TextLabel")
		
		ToggleContainer.Name = "ToggleContainer"
		ToggleContainer.Parent = Container
		ToggleContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		ToggleContainer.BorderSizePixel = 0
		ToggleContainer.Size = UDim2.new(0, 157, 0, 45)
		
		Toggle.Name = "Toggle"
		Toggle.Parent = ToggleContainer
		Toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		Toggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
		Toggle.BorderSizePixel = 2
		Toggle.Position = UDim2.new(0.72611469, 0, 0.311111122, 0)
		Toggle.Size = UDim2.new(0, 18, 0, 16)
		Toggle.Font = Enum.Font.SourceSans
		Toggle.Text = ""
		Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
		Toggle.TextSize = 14.000
		local Toggled = false
		Toggle.MouseButton1Click:Connect(function()
			if Toggled == false then
				Toggled = true
			else
				Toggled = false
			end
			callback(Toggled)
		end)
		
		ToggleName.Name = "ToggleName"
		ToggleName.Parent = Toggle
		ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleName.BackgroundTransparency = 1.000
		ToggleName.Position = UDim2.new(-5.02525234, 0, -0.368055344, 0)
		ToggleName.Size = UDim2.new(0, 83, 0, 26)
		ToggleName.Font = Enum.Font.SourceSans
		ToggleName.Text = name
		ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
		ToggleName.TextScaled = true
		ToggleName.TextSize = 14.000
		ToggleName.TextWrapped = true
		ToggleName.TextXAlignment = Enum.TextXAlignment.Left
		
		local function QVAIAC_fake_script() -- Toggle.Script 
			local script = Instance.new('Script', Toggle)
		
			Toggle = false
			script.Parent.MouseButton1Click:Connect(function()
				if Toggle == false then
					script.Parent.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
					script.Parent.BorderColor3 = Color3.fromRGB(85, 255, 127)
					Toggle = true
				else
					script.Parent.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					script.Parent.BorderColor3 = Color3.fromRGB(255, 255, 255)
					Toggle = false	
				end	
			end)
		end
			coroutine.wrap(QVAIAC_fake_script)()
	end
	
	return Lib;
	
end

return Library;
