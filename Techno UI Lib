print("Devonte was here :)")

for _, v in pairs(game.CoreGui:GetChildren()) do
	if v.Name == "UILib" then
		v:Destroy()
	end
end

local UILib = Instance.new("ScreenGui")
UILib.Name = "UILib"
UILib.Parent = game.CoreGui
UILib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local function getNextWindowPos()
	local biggest = 0;
	local ok = nil;
	for i, v in pairs(UILib:GetChildren()) do
		if v.Position.X.Offset > biggest then
			biggest = v.Position.X.Offset
			ok = v;
		end
	end
	if biggest == 0 then
		biggest = biggest + 5;
	else
		biggest = biggest + ok.Size.X.Offset + 0.5;
	end
	
	return biggest;
end

local Library = {}

function Library:Window(title)
local Top = Instance.new("Frame")
local Container = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local Title = Instance.new("TextLabel")
local MiniLogo = Instance.new("ImageButton")
local Minimize = Instance.new("TextButton")
local Line = Instance.new("Frame")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")

Top.Name = "Top"
Top.Parent = UILib
Top.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Top.Position = UDim2.new(0, getNextWindowPos() + 10, 0, 10)
Top.Size = UDim2.new(0.121877357, 0, 0.0451895036, 0)
Top.Active = true

Container.Name = "Container"
Container.Parent = Top
Container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Container.BackgroundTransparency = 1.000
Container.Position = UDim2.new(0, 0, 1, 0)
Container.Size = UDim2.new(1.00000012, 0, 0, 0)

UIListLayout.Parent = Container
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

UIAspectRatioConstraint.Parent = Container
UIAspectRatioConstraint.AspectRatio = inf

Title.Name = "Title"
Title.Parent = Top
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.0372670814, 0, 0, 0)
Title.Size = UDim2.new(0, 49, 0, 31)
Title.Font = Enum.Font.SourceSansSemibold
Title.Text = title
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left

MiniLogo.Name = "MiniLogo"
MiniLogo.Parent = Top
MiniLogo.BackgroundTransparency = 1.000
MiniLogo.Position = UDim2.new(0.807453394, 0, 0.0967741907, 0)
MiniLogo.Size = UDim2.new(0, 25, 0, 25)
MiniLogo.Image = "rbxassetid://3926305904"
MiniLogo.ImageRectOffset = Vector2.new(124, 684)
MiniLogo.ImageRectSize = Vector2.new(36, 36)

Minimize.Name = "Minimize"
Minimize.Parent = Top
Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Minimize.BackgroundTransparency = 1.000
Minimize.Position = UDim2.new(0.788366437, 0, 0.000225812197, 0)
Minimize.Size = UDim2.new(0, 30, 0, 30)
Minimize.ZIndex = 2
Minimize.Font = Enum.Font.SourceSans
Minimize.Text = ""
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextSize = 14.000

Line.Name = "Line"
Line.Parent = Top
Line.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
Line.BorderSizePixel = 0
Line.Position = UDim2.new(-0.00621118024, 0, 1.03225803, 0)
Line.Size = UDim2.new(0, 163, 0, 2)

UIAspectRatioConstraint_2.Parent = Top
UIAspectRatioConstraint_2.AspectRatio = 5.194

local function HRWQKCM_fake_script() -- Minimize.Script 
	local script = Instance.new('Script', Minimize)

	local Mini = script.Parent.Parent.MiniLogo
	local Toggle = false
	script.Parent.MouseButton1Click:Connect(function()
		if Toggle == false then
			game:GetService("TweenService"):Create(Mini, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 180}):Play();
			script.Parent.Parent.Container.Visible = false
			Toggle = true
		else
			game:GetService("TweenService"):Create(Mini, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play();
			script.Parent.Parent.Container.Visible = true
			Toggle = false
		end
	end)
end
	coroutine.wrap(HRWQKCM_fake_script)()
	
	function dragify(Frame)
		dragToggle = nil
		dragSpeed = .25 -- You can edit this.
		dragInput = nil
		dragStart = nil
		dragPos = nil
		
		function updateInput(input)
			Delta = input.Position - dragStart
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
		end
		
		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if (input.UserInputState == Enum.UserInputState.End) then
						dragToggle = false
					end
				end)
			end
		end)
		
		Frame.InputChanged:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				dragInput = input
			end
		end)
		
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if (input == dragInput and dragToggle) then
				updateInput(input)
			end
		end)
	end
	
	dragify(Top)
	
	local Lib = {}
	
	function Lib:Button(name, callback)	
		local ButtonContainer = Instance.new("Frame")
		local Button = Instance.new("TextButton")
		local ButtonName = Instance.new("TextLabel")
		local UICorner = Instance.new("UICorner")
		
		ButtonContainer.Name = "ButtonContainer"
		ButtonContainer.Parent = Container
		ButtonContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		ButtonContainer.BorderSizePixel = 0
		ButtonContainer.Size = UDim2.new(0, 163, 0, 40)
		
		Button.Name = "Button"
		Button.Parent = ButtonContainer
		Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		Button.BorderSizePixel = 0
		Button.Position = UDim2.new(0.0270000007, 0, 0.174999997, 0)
		Button.Size = UDim2.new(0, 156, 0, 33)
		Button.Font = Enum.Font.SourceSans
		Button.Text = ""
		Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button.TextSize = 14.000
		
		ButtonName.Name = "ButtonName"
		ButtonName.Parent = Button
		ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ButtonName.BackgroundTransparency = 1.000
		ButtonName.Position = UDim2.new(0.0769230798, 0, 0.039394021, 0)
		ButtonName.Size = UDim2.new(0, 130, 0, 29)
		ButtonName.Font = Enum.Font.SourceSansSemibold
		ButtonName.Text = "Button"
		ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
		ButtonName.TextScaled = true
		ButtonName.TextSize = 14.000
		ButtonName.TextWrapped = true
		
		UICorner.CornerRadius = UDim.new(0, 2)
		UICorner.Parent = Button
	end
	
	function Lib:Toggle(name, callback)
		local ToggleContainer = Instance.new("Frame")
		local Toggle = Instance.new("TextButton")
		local UICorner_2 = Instance.new("UICorner")
		local ToggleName = Instance.new("TextLabel")
		
		ToggleContainer.Name = "ToggleContainer"
		ToggleContainer.Parent = Container
		ToggleContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		ToggleContainer.BorderSizePixel = 0
		ToggleContainer.Size = UDim2.new(0, 163, 0, 40)
		
		Toggle.Name = "Toggle"
		Toggle.Parent = ToggleContainer
		Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Toggle.Position = UDim2.new(0.785276055, 0, 0.199999988, 0)
		Toggle.Size = UDim2.new(0, 23, 0, 20)
		Toggle.Font = Enum.Font.SourceSans
		Toggle.Text = ""
		Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
		Toggle.TextSize = 14.000
		
		UICorner_2.CornerRadius = UDim.new(0, 1000)
		UICorner_2.Parent = Toggle
		
		ToggleName.Name = "ToggleName"
		ToggleName.Parent = Toggle
		ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleName.BackgroundTransparency = 1.000
		ToggleName.Position = UDim2.new(-4.67999983, 0, -0.0869565234, 0)
		ToggleName.Size = UDim2.new(0, 117, 0, 27)
		ToggleName.Font = Enum.Font.SourceSansSemibold
		ToggleName.Text = "Toggle"
		ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
		ToggleName.TextScaled = true
		ToggleName.TextSize = 14.000
		ToggleName.TextWrapped = true
		ToggleName.TextXAlignment = Enum.TextXAlignment.Left
		
		local function UKYV_fake_script() -- Toggle.Script 
			local script = Instance.new('Script', Toggle)
			
			Toggle = false
			script.Parent.MouseButton1Click:Connect(function()
				if Toggle == false then
					script.Parent.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
					Toggle = true
				else
					script.Parent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Toggle = false
				end
			end)
		end
		coroutine.wrap(UKYV_fake_script)()
	end
	
return Lib;	
	
end

return Library;

