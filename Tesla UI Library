for _, v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "UILib" then
        v:Destroy()
    end
end
 
local Library = {TabCount = 0}
 
function Library:Window(title)
    local UILib = Instance.new("ScreenGui")
    local Top = Instance.new("Frame")
    local Main = Instance.new("Frame")
    local UICorner_3 = Instance.new("UICorner")
    local Title = Instance.new("TextLabel")
    local UICorner_16 = Instance.new("UICorner")
    local Minimize = Instance.new("TextButton")
    local UICorner_17 = Instance.new("UICorner")
    local Line = Instance.new("Frame")
    local TabHolder = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
 
    UILib.Name = "UILib"
    UILib.Parent = game.CoreGui
 
    Top.Name = "Top"
    Top.Parent = UILib
    Top.AnchorPoint = Vector2.new(0.5, 0.5)
    Top.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Top.BorderSizePixel = 0
    Top.Position = UDim2.new(0.5, 0, 0.35, 0)
    Top.Size = UDim2.new(0, 402, 0, 35)
    Top.Active = true
 
    Main.Name = "Main"
    Main.Parent = Top
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.ClipsDescendants = true
    Main.Position = UDim2.new(0, 0, 1, 0)
    Main.Size = UDim2.new(0, 402, 0, 212)
 
    UICorner_3.CornerRadius = UDim.new(0, 6)
    UICorner_3.Parent = Main
 
    TabHolder.Name = "TabHolder"
    TabHolder.Parent = Main
    TabHolder.Active = true
    TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHolder.BackgroundTransparency = 1.000
    TabHolder.BorderSizePixel = 0
    TabHolder.Position = UDim2.new(0, 0, 0.0256410185, 0)
    TabHolder.Size = UDim2.new(0, 112,0, 206)
    TabHolder.BottomImage = ""
    TabHolder.CanvasSize = UDim2.new(0, 0, 3, 0)
    TabHolder.ScrollBarThickness = 8
    TabHolder.TopImage = ""
    TabHolder.ScrollBarImageTransparency = 1
 
    UIListLayout.Parent = TabHolder
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 2)
 
    Title.Name = "Title"
    Title.Parent = Top
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.0223078933, 0, 0.147402525, 0)
    Title.Size = UDim2.new(0, 200, 0, 24)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = title
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextScaled = true
    Title.TextSize = 14.000
    Title.TextWrapped = true
    Title.TextXAlignment = Enum.TextXAlignment.Left
 
    UICorner_16.CornerRadius = UDim.new(0, 6)
    UICorner_16.Parent = Top
 
    Minimize.Name = "Minimize"
    Minimize.Parent = Top
    Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Minimize.Position = UDim2.new(0.930348217, 0, 0.192857146, 0)
    Minimize.Size = UDim2.new(0, 22, 0, 21)
    Minimize.AutoButtonColor = false
    Minimize.Font = Enum.Font.SourceSans
    Minimize.Text = ""
    Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
    Minimize.TextSize = 14.000
 
    UICorner_17.CornerRadius = UDim.new(0, 100)
    UICorner_17.Parent = Minimize
 
    Line.Name = "Line"
    Line.Parent = Top
    Line.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Line.BorderSizePixel = 0
    Line.Position = UDim2.new(0, 0, 0.885714293, 0)
    Line.Size = UDim2.new(0, 402, 0, 9)
    Line.ZIndex = 3
 
    Minimize.MouseButton1Click:Connect(function()
        if Main.Size == UDim2.new(0, 402,0, 212) then
            game:GetService("TweenService"):Create(Minimize, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 59)}):Play()
            Main:TweenSize(UDim2.new(0, 402,0, 0), "Out", "Quad", 0.2, true)
            wait(0.2)
            Line.Visible = false
        else
            game:GetService("TweenService"):Create(Minimize, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
            Line.Visible = true
            Main:TweenSize(UDim2.new(0, 402,0, 212), "Out", "Quad", 0.2, true)
        end
    end)
 
    function dragify(Frame)
        dragToggle = nil
        dragSpeed = .25 -- You can edit this.
        dragInput = nil
        dragStart = nil
        dragPos = nil
        
        function updateInput(input)
        Delta = input.Position - dragStart
        Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
        end
        
        Frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                    dragStart = input.Position
                    startPos = Frame.Position
                    input.Changed:Connect(function()
                    if (input.UserInputState == Enum.UserInputState.End) then
                    dragToggle = false
                    end
                end)
            end
        end)
        
        Frame.InputChanged:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            dragInput = input
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if (input == dragInput and dragToggle) then
            updateInput(input)
            end
        end)
    end
    
    dragify(Top)
 
    local TabHolderV = {}
 
    function TabHolderV:Tab(name)
        local Tab = Instance.new("TextButton")
        local TabName = Instance.new("TextLabel")
        local UICorner = Instance.new("UICorner")
        local TabIndicator = Instance.new("Frame")
        local UICorner_2 = Instance.new("UICorner")
        local HubHolder = Instance.new("Frame")
        local UICorner_4 = Instance.new("UICorner")
        local Hub = Instance.new("ScrollingFrame")
        local UIListLayout_2 = Instance.new("UIListLayout")
        local UIPadding = Instance.new("UIPadding")
 
        Tab.Name = "Tab"
        Tab.Parent = TabHolder
        Tab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        Tab.BorderSizePixel = 0
        Tab.Position = UDim2.new(0, 0, 1.28766146e-07, 0)
        Tab.Size = UDim2.new(0, 103, 0, 30)
        Tab.AutoButtonColor = false
        Tab.Font = Enum.Font.SourceSans
        Tab.Text = ""
        Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
        Tab.TextSize = 14.000
    
        TabName.Name = "TabName"
        TabName.Parent = Tab
        TabName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabName.BackgroundTransparency = 1.000
        TabName.BorderSizePixel = 0
        TabName.Position = UDim2.new(0.369, 0,0.168, 0)
        TabName.Size = UDim2.new(0, 71,0, 22)
        TabName.Font = Enum.Font.GothamSemibold
        TabName.Text = name
        TabName.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabName.TextScaled = true
        TabName.TextSize = 14.000
        TabName.TextWrapped = true
    TabName.TextXAlignment = Enum.TextXAlignment.Left
    
        UICorner.CornerRadius = UDim.new(0, 1)
        UICorner.Parent = Tab
    
        TabIndicator.Name = "TabIndicator"
        TabIndicator.Parent = Tab
        TabIndicator.BackgroundColor3 = Library.TabCount == 0 and Color3.fromRGB(255, 0, 59) or Color3.fromRGB(255, 255, 255)
        TabIndicator.Position = UDim2.new(0.078, 0,0.154, 0)
        TabIndicator.Size = UDim2.new(0, 20,0, 20)
    
        UICorner_2.CornerRadius = UDim.new(0, 100)
        UICorner_2.Parent = TabIndicator
 
        HubHolder.Name = "HubHolder"
        HubHolder.Parent = Main
        HubHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        HubHolder.BorderSizePixel = 0
        HubHolder.Position = UDim2.new(0.271144271, 0, 0.023584906, 0)
        HubHolder.Size = UDim2.new(0, 293, 0, 207)
        HubHolder.Visible = Library.TabCount == 0
    
        UICorner_4.CornerRadius = UDim.new(0, 6)
        UICorner_4.Parent = HubHolder
    
        Hub.Name = "Hub"
        Hub.Parent = HubHolder
        Hub.Active = true
        Hub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Hub.BackgroundTransparency = 1.000
        Hub.BorderSizePixel = 0
        Hub.Size = UDim2.new(0, 287, 0, 207)
        Hub.ScrollBarThickness = 8
        Hub.ScrollBarImageTransparency = 1
 
        UIListLayout_2.Parent = Hub
        UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_2.Padding = UDim.new(0, 5)
 
        UIPadding.Parent = Hub
        UIPadding.PaddingTop = UDim.new(0, 2)
 
        Tab.MouseButton1Click:Connect(function()
            for i,v in pairs(TabHolder:GetDescendants()) do
                if v.Name == "TabIndicator" then
                    game:GetService("TweenService"):Create(v, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                end
            end
            game:GetService("TweenService"):Create(TabIndicator, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 59)}):Play()
        end)
        
        Tab.MouseButton1Click:Connect(function()
            for i,v in pairs(Main:GetChildren()) do
                if v.Name == "HubHolder" then
                    v.Visible = false
                end
            end
            HubHolder.Visible = true
        end)
 
        Library.TabCount = Library.TabCount + 1
 
        local Lib = {}
 
        function Lib:Button(name, callback)
            local Button = Instance.new("TextButton")
            local UICorner_5 = Instance.new("UICorner")
            local ButtonName = Instance.new("TextLabel")
 
            Button.Name = "Button"
            Button.Parent = Hub
            Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Button.Position = UDim2.new(0.125435546, 0, 0.052449964, 0)
            Button.Size = UDim2.new(0, 265, 0, 29)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14.000
        
            UICorner_5.CornerRadius = UDim.new(0, 6)
            UICorner_5.Parent = Button
        
            ButtonName.Name = "ButtonName"
            ButtonName.Parent = Button
            ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonName.BackgroundTransparency = 1.000
            ButtonName.Position = UDim2.new(0.0150943398, 0, 0.103448272, 0)
            ButtonName.Size = UDim2.new(0, 256, 0, 22)
            ButtonName.Font = Enum.Font.GothamSemibold
            ButtonName.Text = name
            ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonName.TextScaled = true
            ButtonName.TextSize = 14.000
            ButtonName.TextWrapped = true
 
            Button.MouseButton1Down:Connect(function()
                game:GetService("TweenService"):Create(Button, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 59)}):Play()
            end)
            Button.MouseButton1Up:Connect(function()
                game:GetService("TweenService"):Create(Button, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
            end)
 
            Button.MouseButton1Click:Connect(function()
                callback()
            end)
        end
 
        function Lib:Toggle(name, callback)
            local ToggleBack = Instance.new("Frame")
            local UICorner_6 = Instance.new("UICorner")
            local ToggleName = Instance.new("TextLabel")
            local ToggleIcon = Instance.new("Frame")
            local UICorner_7 = Instance.new("UICorner")
            local Toggle = Instance.new("TextButton")
            local UICorner_8 = Instance.new("UICorner")
 
            ToggleBack.Name = "ToggleBack"
            ToggleBack.Parent = Hub
            ToggleBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            ToggleBack.Size = UDim2.new(0, 265, 0, 29)
        
            UICorner_6.CornerRadius = UDim.new(0, 6)
            UICorner_6.Parent = ToggleBack
        
            ToggleName.Name = "ToggleName"
            ToggleName.Parent = ToggleBack
            ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleName.BackgroundTransparency = 1.000
            ToggleName.Position = UDim2.new(0.023, 0,0.103, 0)
            ToggleName.Size = UDim2.new(0, 259, 0, 22)
            ToggleName.Font = Enum.Font.GothamSemibold
            ToggleName.Text = name
            ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleName.TextScaled = true
            ToggleName.TextSize = 14.000
            ToggleName.TextWrapped = true
            ToggleName.TextXAlignment = Enum.TextXAlignment.Left
        
            ToggleIcon.Name = "ToggleIcon"
            ToggleIcon.Parent = ToggleBack
            ToggleIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleIcon.Position = UDim2.new(0.883018911, 0, 0.103448279, 0)
            ToggleIcon.Size = UDim2.new(0, 22, 0, 21)
        
            UICorner_7.CornerRadius = UDim.new(0, 3)
            UICorner_7.Parent = ToggleIcon
        
            Toggle.Name = "Toggle"
            Toggle.Parent = ToggleBack
            Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.BackgroundTransparency = 1.000
            Toggle.Size = UDim2.new(0, 265, 0, 29)
            Toggle.Font = Enum.Font.SourceSans
            Toggle.Text = ""
            Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.TextSize = 14.000
            local Toggled = false
            Toggle.MouseButton1Click:Connect(function()
                if Toggled == false then
                    Toggled = true
                else
                    Toggled = false
                end
                callback(Toggled)
            end)
        
            UICorner_8.CornerRadius = UDim.new(0, 6)
            UICorner_8.Parent = Toggle
 
            Toggle.MouseButton1Click:Connect(function()
                if ToggleIcon.BackgroundColor3 == Color3.fromRGB(255, 255, 255) then
                    game:GetService("TweenService"):Create(ToggleIcon, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 59)}):Play()
                else
                    game:GetService("TweenService"):Create(ToggleIcon, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                end
            end)
        end
 
        function Lib:Slider(name, min, max, start, callback)
            local SliderBack = Instance.new("Frame")
            local UICorner_14 = Instance.new("UICorner")
            local Slider = Instance.new("Frame")
            local UICorner_15 = Instance.new("UICorner")
            local SliderName = Instance.new("TextLabel")
            local SliderValue = Instance.new("TextLabel")
            local dragging = false;
 
            SliderBack.Name = "SliderBack"
            SliderBack.Parent = Hub
            SliderBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            SliderBack.ClipsDescendants = true
            SliderBack.Size = UDim2.new(0, 265, 0, 29)
        
            UICorner_14.CornerRadius = UDim.new(0, 6)
            UICorner_14.Parent = SliderBack
        
            Slider.Name = "Slider"
            Slider.Parent = SliderBack
            Slider.BackgroundColor3 = Color3.fromRGB(255, 0, 59)
            Slider.Size = UDim2.new((start or 0) / max, 0, 1, 0);
        
            UICorner_15.CornerRadius = UDim.new(0, 6)
            UICorner_15.Parent = Slider
        
            SliderName.Name = "SliderName"
            SliderName.Parent = SliderBack
            SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderName.BackgroundTransparency = 1.000
            SliderName.Position = UDim2.new(0.0114923446, 0, 0.103448279, 0)
            SliderName.Size = UDim2.new(0, 201, 0, 22)
            SliderName.Font = Enum.Font.GothamSemibold
            SliderName.Text = name
            SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderName.TextScaled = true
            SliderName.TextSize = 14.000
            SliderName.TextWrapped = true
            SliderName.TextXAlignment = Enum.TextXAlignment.Left
        
            SliderValue.Name = "SliderValue"
            SliderValue.Parent = SliderBack
            SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.BackgroundTransparency = 1.000
            SliderValue.Position = UDim2.new(0.773584902, 0, -0.0344827585, 0)
            SliderValue.Size = UDim2.new(0, 55, 0, 30)
            SliderValue.Font = Enum.Font.GothamSemibold
            SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0) .. "/" .. max
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextScaled = true
            SliderValue.TextSize = 14.000
            SliderValue.TextWrapped = true
 
            local function slide(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderBack.AbsolutePosition.X) / SliderBack.AbsoluteSize.X, 0, 1), 0, 1, 0);
                Slider:TweenSize(pos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
                local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min);
                SliderValue.Text = tostring(value) .. "/" .. max;
                callback(value);
            end;
 
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true;
                end;
            end);
 
            SliderBack.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false;
                end;
            end);
 
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    slide(input);
                end;
            end);
 
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    slide(input);
                end;
            end);
        end
 
        function Lib:Dropdown(name, options, callback)
            local Dropdown = Instance.new("TextButton")
            local UICorner_11 = Instance.new("UICorner")
            local DropdownName = Instance.new("TextLabel")
            local DropArrow = Instance.new("ImageLabel")
            local DropHolder = Instance.new("Frame")
            local DropHub = Instance.new("ScrollingFrame")
            local UIListLayout_3 = Instance.new("UIListLayout")
            local UIPadding_2 = Instance.new("UIPadding")
            local UIListLayout_4 = Instance.new("UIListLayout")
            local UICorner_13 = Instance.new("UICorner")
 
            Dropdown.Name = "Dropdown"
            Dropdown.Parent = Hub
            Dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Dropdown.Position = UDim2.new(0.125435546, 0, 0.052449964, 0)
            Dropdown.Size = UDim2.new(0, 265, 0, 29)
            Dropdown.ZIndex = 2
            Dropdown.AutoButtonColor = false
            Dropdown.Font = Enum.Font.SourceSans
            Dropdown.Text = ""
            Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
            Dropdown.TextSize = 14.000
 
            UICorner_11.CornerRadius = UDim.new(0, 6)
            UICorner_11.Parent = Dropdown
 
            DropdownName.Name = "DropdownName"
            DropdownName.Parent = Dropdown
            DropdownName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownName.BackgroundTransparency = 1.000
            DropdownName.Position = UDim2.new(0.0264150947, 0, 0.103448279, 0)
            DropdownName.Size = UDim2.new(0, 227, 0, 22)
            DropdownName.ZIndex = 2
            DropdownName.Font = Enum.Font.GothamSemibold
            DropdownName.Text = name
            DropdownName.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownName.TextScaled = true
            DropdownName.TextSize = 14.000
            DropdownName.TextWrapped = true
            DropdownName.TextXAlignment = Enum.TextXAlignment.Left
 
            DropArrow.Name = "DropArrow"
            DropArrow.Parent = Dropdown
            DropArrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropArrow.BackgroundTransparency = 1.000
            DropArrow.Position = UDim2.new(0.875, 0, 0.0340000018, 0)
            DropArrow.Rotation = 180.000
            DropArrow.Size = UDim2.new(0, 25, 0, 25)
            DropArrow.ZIndex = 2
            DropArrow.Image = "rbxassetid://3926307971"
            DropArrow.ImageRectOffset = Vector2.new(764, 244)
            DropArrow.ImageRectSize = Vector2.new(36, 36)
 
            DropHolder.Name = "DropHolder"
            DropHolder.Parent = Dropdown
            DropHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            DropHolder.BorderSizePixel = 0
            DropHolder.ClipsDescendants = true
            DropHolder.Position = UDim2.new(0, 0, 0.896551728, 0)
            DropHolder.Size = UDim2.new(0, 265, 0, 0)
            DropHolder.ZIndex = 3
 
            DropHub.Name = "DropHub"
            DropHub.Parent = DropHolder
            DropHub.Active = true
            DropHub.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            DropHub.BorderSizePixel = 0
            DropHub.Size = UDim2.new(0, 265, 0, 97)
            DropHub.ZIndex = 3
            DropHub.ScrollBarThickness = 0
 
            UIListLayout_3.Parent = DropHub
            UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
 
            UIPadding_2.Parent = DropHub
            UIPadding_2.PaddingTop = UDim.new(0, 5)
 
            UIListLayout_4.Parent = DropHolder
            UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
 
            UICorner_13.CornerRadius = UDim.new(0, 6)
            UICorner_13.Parent = DropHolder
        
            Dropdown.MouseButton1Click:Connect(function()
                    if DropHolder.Size == UDim2.new(0, 265,0, 0) then
                        game:GetService("TweenService"):Create(DropArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 90}):Play();
                        DropHolder:TweenSize(UDim2.new(0, 265,0, 103), "Out", "Sine", 0.2, true)
                    else
                        game:GetService("TweenService"):Create(DropArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 180}):Play();
                        DropHolder:TweenSize(UDim2.new(0, 265,0, 0), "Out", "Sine", 0.2, true)
                    end
                end)
 
            for _, v in pairs(options) do
                local DropButton = Instance.new("TextButton")
                local UICorner_12 = Instance.new("UICorner")
                local DropButtonName = Instance.new("TextLabel")
 
                DropButton.Name = "DropButton"
                DropButton.Parent = DropHub
                DropButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                DropButton.Position = UDim2.new(0.125435546, 0, 0.052449964, 0)
                DropButton.Size = UDim2.new(0, 265, 0, 29)
                DropButton.ZIndex = 3
                DropButton.AutoButtonColor = false
                DropButton.Font = Enum.Font.SourceSans
                DropButton.Text = ""
                DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                DropButton.TextSize = 14.000
            
                UICorner_12.CornerRadius = UDim.new(0, 6)
                UICorner_12.Parent = DropButton
            
                DropButtonName.Name = "DropButtonName"
                DropButtonName.Parent = DropButton
                DropButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropButtonName.BackgroundTransparency = 1.000
                DropButtonName.Position = UDim2.new(0.0150943398, 0, 0.103448272, 0)
                DropButtonName.Size = UDim2.new(0, 256, 0, 22)
                DropButtonName.ZIndex = 3
                DropButtonName.Font = Enum.Font.GothamSemibold
                DropButtonName.Text = tostring(v)
                DropButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
                DropButtonName.TextScaled = true
                DropButtonName.TextSize = 14.000
                DropButtonName.TextWrapped = true
 
                DropButton.MouseButton1Down:Connect(function()
                    game:GetService("TweenService"):Create(DropButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(255, 0, 59)}):Play()
                end)
                DropButton.MouseButton1Up:Connect(function()
                    game:GetService("TweenService"):Create(DropButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
                end)
                DropButton.MouseButton1Click:Connect(function()
                    callback(v)
                end)
                DropButton.MouseButton1Click:Connect(function()
                    if DropHolder.Size == UDim2.new(0, 265,0, 103) then
                        game:GetService("TweenService"):Create(DropArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 180}):Play();
                        DropHolder:TweenSize(UDim2.new(0, 265,0, 0), "Out", "Sine", 0.2, true)
                        DropdownName.Text = DropButtonName.Text
                    end
                end)
            end
        end
 
        function Lib:Box(name, text, callback)
            local BoxBack = Instance.new("Frame")
            local UICorner_9 = Instance.new("UICorner")
            local BoxName = Instance.new("TextLabel")
            local Box = Instance.new("TextBox")
            local UICorner_10 = Instance.new("UICorner")
 
            BoxBack.Name = "BoxBack"
            BoxBack.Parent = Hub
            BoxBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            BoxBack.BackgroundTransparency = 1.000
            BoxBack.Position = UDim2.new(0.0383275263, 0, 0.497584552, 0)
            BoxBack.Size = UDim2.new(0, 265, 0, 21)
        
            UICorner_9.CornerRadius = UDim.new(0, 6)
            UICorner_9.Parent = BoxBack
        
            BoxName.Name = "BoxName"
            BoxName.Parent = BoxBack
            BoxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BoxName.BackgroundTransparency = 1.000
            BoxName.Position = UDim2.new(0.0150943398, 0, 0.0558292307, 0)
            BoxName.Size = UDim2.new(0, 201, 0, 22)
            BoxName.Font = Enum.Font.GothamSemibold
            BoxName.Text = name
            BoxName.TextColor3 = Color3.fromRGB(255, 255, 255)
            BoxName.TextScaled = true
            BoxName.TextSize = 14.000
            BoxName.TextWrapped = true
            BoxName.TextXAlignment = Enum.TextXAlignment.Left
        
            Box.Name = "Box"
            Box.Parent = BoxBack
            Box.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Box.ClipsDescendants = true
            Box.Position = UDim2.new(0.709433973, 0, 0.0417222492, 0)
            Box.Size = UDim2.new(0, 77, 0, 22)
            Box.Font = Enum.Font.GothamSemibold
            Box.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
            Box.Text = text
            Box.TextColor3 = Color3.fromRGB(255, 255, 255)
            Box.TextSize = 17.000
        
            UICorner_10.CornerRadius = UDim.new(0, 6)
            UICorner_10.Parent = Box
 
            Box.FocusLost:Connect(function()
                callback(Box.Text)
            end)
        end
 
        function Lib:Label(name)
            local Label = Instance.new("TextLabel")
 
            Label.Name = "Label"
            Label.Parent = Hub
            Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label.BackgroundTransparency = 1.000
            Label.Position = UDim2.new(0.0339622647, 0, 3.13793087, 0)
            Label.Size = UDim2.new(0, 256, 0, 22)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextScaled = true
            Label.TextSize = 14.000
            Label.TextWrapped = true
            Label.Text = name
        end
 
        return Lib
 
    end
 
    return TabHolderV
 
end
 
return Library
